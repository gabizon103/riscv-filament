extern "components.sv" {
  comp mux16to1[#WIDTH]<G:L-(G), ?L:1=G+1>(
    @[G,L] sel:4,
    @[G,L] in0: #WIDTH,
    @[G,L] in1: #WIDTH,
    @[G,L] in2: #WIDTH,
    @[G,L] in3: #WIDTH,
    @[G,L] in4: #WIDTH,
    @[G,L] in5: #WIDTH,
    @[G,L] in6: #WIDTH,
    @[G,L] in7: #WIDTH,
    @[G,L] in8: #WIDTH,
    @[G,L] in9: #WIDTH,
    @[G,L] in10: #WIDTH,
    @[G,L] in11: #WIDTH,
    @[G,L] in12: #WIDTH,
    @[G,L] in13: #WIDTH,
    @[G,L] in14: #WIDTH,
    @[G,L] in15: #WIDTH
  ) -> (
    @[G,L] out: #WIDTH
  ) where L > G, #WIDTH > 0;

  comp mux8to1[#WIDTH]<G:L-(G),?L:1=G+1>(
    @[G,L] sel:4,
    @[G,L] in0: #WIDTH,
    @[G,L] in1: #WIDTH,
    @[G,L] in2: #WIDTH,
    @[G,L] in3: #WIDTH,
    @[G,L] in4: #WIDTH,
    @[G,L] in5: #WIDTH,
    @[G,L] in6: #WIDTH,
    @[G,L] in7: #WIDTH
  ) ->  (
    @[G,L] out: #WIDTH
  ) where L > G, #WIDTH > 0;

  comp onehotmux[#WIDTH]<G:L-(G),?L:1=G+1>(
    @[G,L] sel:6,
    @[G,L] in0: #WIDTH,
    @[G,L] in1: #WIDTH,
    @[G,L] in2: #WIDTH,
    @[G,L] in3: #WIDTH,
    @[G,L] in4: #WIDTH,
    @[G,L] in5: #WIDTH,
  ) -> (
    @[G,L] out: #WIDTH
  ) where L > G, #WIDTH > 0;

  comp isrtype<G:L-(G),?L:1=G+1>(
    @[G,L] opcode:7,
    @[G,L] funct:10
  ) -> (
    @[G,L] out:1
  ) where L > G;

  comp regfile<G: L-(G+1), L: 1>(
    clk:1,
    reset:1,
    @[G,G+1] ld:1,
    @[G,G+1] r_in1:5,
    @[G,G+1] r_in2:5,
    @[G,G+1] data_in:32,
    @[G,G+1] r_dest:5
  ) -> (
    @[G+1,L] rs1:32,
    @[G+1,L] rs2:32
  ) where L > G+1;
}